// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v4.23.1
// source: share.proto

package sharepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 分享信息结构
type ShareInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShareId       string                 `protobuf:"bytes,1,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`       // 分享唯一ID
	FileId        int64                  `protobuf:"varint,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`         // 被分享的文件
	OwnerId       int64                  `protobuf:"varint,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`      // 文件所有者
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                    // 可选分享密码
	ExpireAt      int64                  `protobuf:"varint,5,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`   // 过期时间戳 (秒)
	CreatedAt     string                 `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // 创建时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareInfo) Reset() {
	*x = ShareInfo{}
	mi := &file_share_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareInfo) ProtoMessage() {}

func (x *ShareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_share_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareInfo.ProtoReflect.Descriptor instead.
func (*ShareInfo) Descriptor() ([]byte, []int) {
	return file_share_proto_rawDescGZIP(), []int{0}
}

func (x *ShareInfo) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *ShareInfo) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *ShareInfo) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *ShareInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ShareInfo) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *ShareInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// 创建分享请求
type CreateShareRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        int64                  `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	OwnerId       int64                  `protobuf:"varint,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`                  // 可选密码
	ExpireIn      int64                  `protobuf:"varint,4,opt,name=expire_in,json=expireIn,proto3" json:"expire_in,omitempty"` // 过期秒数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateShareRequest) Reset() {
	*x = CreateShareRequest{}
	mi := &file_share_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShareRequest) ProtoMessage() {}

func (x *CreateShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_share_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShareRequest.ProtoReflect.Descriptor instead.
func (*CreateShareRequest) Descriptor() ([]byte, []int) {
	return file_share_proto_rawDescGZIP(), []int{1}
}

func (x *CreateShareRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *CreateShareRequest) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *CreateShareRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateShareRequest) GetExpireIn() int64 {
	if x != nil {
		return x.ExpireIn
	}
	return 0
}

// 创建分享响应
type CreateShareResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShareId       string                 `protobuf:"bytes,1,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	ShareUrl      string                 `protobuf:"bytes,2,opt,name=share_url,json=shareUrl,proto3" json:"share_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateShareResponse) Reset() {
	*x = CreateShareResponse{}
	mi := &file_share_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShareResponse) ProtoMessage() {}

func (x *CreateShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_share_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShareResponse.ProtoReflect.Descriptor instead.
func (*CreateShareResponse) Descriptor() ([]byte, []int) {
	return file_share_proto_rawDescGZIP(), []int{2}
}

func (x *CreateShareResponse) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *CreateShareResponse) GetShareUrl() string {
	if x != nil {
		return x.ShareUrl
	}
	return ""
}

// 获取分享信息
type GetShareInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShareId       string                 `protobuf:"bytes,1,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShareInfoRequest) Reset() {
	*x = GetShareInfoRequest{}
	mi := &file_share_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShareInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareInfoRequest) ProtoMessage() {}

func (x *GetShareInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_share_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareInfoRequest.ProtoReflect.Descriptor instead.
func (*GetShareInfoRequest) Descriptor() ([]byte, []int) {
	return file_share_proto_rawDescGZIP(), []int{3}
}

func (x *GetShareInfoRequest) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

type GetShareInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *ShareInfo             `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShareInfoResponse) Reset() {
	*x = GetShareInfoResponse{}
	mi := &file_share_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShareInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareInfoResponse) ProtoMessage() {}

func (x *GetShareInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_share_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareInfoResponse.ProtoReflect.Descriptor instead.
func (*GetShareInfoResponse) Descriptor() ([]byte, []int) {
	return file_share_proto_rawDescGZIP(), []int{4}
}

func (x *GetShareInfoResponse) GetInfo() *ShareInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 验证访问请求
type ValidateAccessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShareId       string                 `protobuf:"bytes,1,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateAccessRequest) Reset() {
	*x = ValidateAccessRequest{}
	mi := &file_share_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccessRequest) ProtoMessage() {}

func (x *ValidateAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_share_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccessRequest.ProtoReflect.Descriptor instead.
func (*ValidateAccessRequest) Descriptor() ([]byte, []int) {
	return file_share_proto_rawDescGZIP(), []int{5}
}

func (x *ValidateAccessRequest) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *ValidateAccessRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ValidateAccessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`                    // 密码是否正确
	FileId        int64                  `protobuf:"varint,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`    // 返回文件 ID（若验证通过）
	OwnerId       int64                  `protobuf:"varint,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"` // 文件所有者
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateAccessResponse) Reset() {
	*x = ValidateAccessResponse{}
	mi := &file_share_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAccessResponse) ProtoMessage() {}

func (x *ValidateAccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_share_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAccessResponse.ProtoReflect.Descriptor instead.
func (*ValidateAccessResponse) Descriptor() ([]byte, []int) {
	return file_share_proto_rawDescGZIP(), []int{6}
}

func (x *ValidateAccessResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateAccessResponse) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *ValidateAccessResponse) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

var File_share_proto protoreflect.FileDescriptor

const file_share_proto_rawDesc = "" +
	"\n" +
	"\vshare.proto\x12\x05share\"\xb2\x01\n" +
	"\tShareInfo\x12\x19\n" +
	"\bshare_id\x18\x01 \x01(\tR\ashareId\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\x03R\x06fileId\x12\x19\n" +
	"\bowner_id\x18\x03 \x01(\x03R\aownerId\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x1b\n" +
	"\texpire_at\x18\x05 \x01(\x03R\bexpireAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\tR\tcreatedAt\"\x81\x01\n" +
	"\x12CreateShareRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x03R\x06fileId\x12\x19\n" +
	"\bowner_id\x18\x02 \x01(\x03R\aownerId\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x1b\n" +
	"\texpire_in\x18\x04 \x01(\x03R\bexpireIn\"M\n" +
	"\x13CreateShareResponse\x12\x19\n" +
	"\bshare_id\x18\x01 \x01(\tR\ashareId\x12\x1b\n" +
	"\tshare_url\x18\x02 \x01(\tR\bshareUrl\"0\n" +
	"\x13GetShareInfoRequest\x12\x19\n" +
	"\bshare_id\x18\x01 \x01(\tR\ashareId\"<\n" +
	"\x14GetShareInfoResponse\x12$\n" +
	"\x04info\x18\x01 \x01(\v2\x10.share.ShareInfoR\x04info\"N\n" +
	"\x15ValidateAccessRequest\x12\x19\n" +
	"\bshare_id\x18\x01 \x01(\tR\ashareId\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"b\n" +
	"\x16ValidateAccessResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\x03R\x06fileId\x12\x19\n" +
	"\bowner_id\x18\x03 \x01(\x03R\aownerId2\xec\x01\n" +
	"\fShareService\x12D\n" +
	"\vCreateShare\x12\x19.share.CreateShareRequest\x1a\x1a.share.CreateShareResponse\x12G\n" +
	"\fGetShareInfo\x12\x1a.share.GetShareInfoRequest\x1a\x1b.share.GetShareInfoResponse\x12M\n" +
	"\x0eValidateAccess\x12\x1c.share.ValidateAccessRequest\x1a\x1d.share.ValidateAccessResponseB\x10Z\x0e/proto;sharepbb\x06proto3"

var (
	file_share_proto_rawDescOnce sync.Once
	file_share_proto_rawDescData []byte
)

func file_share_proto_rawDescGZIP() []byte {
	file_share_proto_rawDescOnce.Do(func() {
		file_share_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_share_proto_rawDesc), len(file_share_proto_rawDesc)))
	})
	return file_share_proto_rawDescData
}

var file_share_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_share_proto_goTypes = []any{
	(*ShareInfo)(nil),              // 0: share.ShareInfo
	(*CreateShareRequest)(nil),     // 1: share.CreateShareRequest
	(*CreateShareResponse)(nil),    // 2: share.CreateShareResponse
	(*GetShareInfoRequest)(nil),    // 3: share.GetShareInfoRequest
	(*GetShareInfoResponse)(nil),   // 4: share.GetShareInfoResponse
	(*ValidateAccessRequest)(nil),  // 5: share.ValidateAccessRequest
	(*ValidateAccessResponse)(nil), // 6: share.ValidateAccessResponse
}
var file_share_proto_depIdxs = []int32{
	0, // 0: share.GetShareInfoResponse.info:type_name -> share.ShareInfo
	1, // 1: share.ShareService.CreateShare:input_type -> share.CreateShareRequest
	3, // 2: share.ShareService.GetShareInfo:input_type -> share.GetShareInfoRequest
	5, // 3: share.ShareService.ValidateAccess:input_type -> share.ValidateAccessRequest
	2, // 4: share.ShareService.CreateShare:output_type -> share.CreateShareResponse
	4, // 5: share.ShareService.GetShareInfo:output_type -> share.GetShareInfoResponse
	6, // 6: share.ShareService.ValidateAccess:output_type -> share.ValidateAccessResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_share_proto_init() }
func file_share_proto_init() {
	if File_share_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_share_proto_rawDesc), len(file_share_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_share_proto_goTypes,
		DependencyIndexes: file_share_proto_depIdxs,
		MessageInfos:      file_share_proto_msgTypes,
	}.Build()
	File_share_proto = out.File
	file_share_proto_goTypes = nil
	file_share_proto_depIdxs = nil
}
